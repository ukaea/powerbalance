{"project": "power_balance", "project_url": "https://ukaea.github.io/powerbalance/", "show_commit_url": "https://github.com/ukaea/powerbalance/commit/", "hash_length": 8, "revision_to_hash": {"68": "9c315d85945963e7e80892b8901a7505745ec5ad", "74": "982590ab1f4f75c33c10095bd2612849f73d2803", "93": "929962698e2d0b89435d1d4ba6239c2e3544523f"}, "revision_to_date": {"68": 1646147991000, "74": 1646840990000, "93": 1648825689000}, "params": {"arch": ["x86_64"], "cpu": ["Intel(R) Xeon(R)-2XXX @ 2.40GHz"], "num_cpu": ["2"], "os": ["Linux 5.11.0"], "ram": ["7114k"], "machine": ["gh-machine-group-0"], "python": ["3.10"], "branch": ["main"]}, "graph_param_list": [{"arch": "x86_64", "cpu": "Intel(R) Xeon(R)-2XXX @ 2.40GHz", "num_cpu": "2", "os": "Linux 5.11.0", "ram": "7114k", "machine": "gh-machine-group-0", "python": "3.10", "branch": "main"}], "benchmarks": {"bench_calc.EfficiencyCalcs.time_heating_eff_calc": {"code": "class EfficiencyCalcs:\n    def time_heating_eff_calc(self):\n        with tempfile.TemporaryDirectory() as tempd:\n            _test_data_file = os.path.join(\n                pathlib.Path(__file__).parents[1],\n                \"tests\",\n                \"baseline\",\n                \"default_heating2elec_eff.pckl\",\n            )\n    \n            _test_data = pickle.load(open(_test_data_file, \"rb\"))\n    \n            _args = _test_data.copy()\n    \n            _args[\"heating_profile\"] = os.path.join(\n                tempd,\n                _args[\"heating_profile\"],\n            )\n    \n            pbm_prof.generate_all(tempd)\n    \n            del _args[\"efficiency\"]\n            del _args[\"average_generated\"]\n            del _args[\"average_profile\"]\n    \n            pbm_eff.calc_heating_to_elec_eff(**_args)", "min_run_count": 2, "name": "bench_calc.EfficiencyCalcs.time_heating_eff_calc", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "0a991e2ce1e236e0196a039a04d0dcdf856e90367ef335e61d08ccbe7f338421", "warmup_time": -1}, "bench_calc.EfficiencyCalcs.time_thermal2elec_calc": {"code": "class EfficiencyCalcs:\n    def time_thermal2elec_calc(self):\n        with tempfile.TemporaryDirectory() as tempd:\n            _test_data_file = os.path.join(\n                pathlib.Path(__file__).parents[1],\n                \"tests\",\n                \"baseline\",\n                \"default_thermal2elec_eff.pckl\",\n            )\n    \n            _test_data = pickle.load(open(_test_data_file, \"rb\"))\n    \n            _args = copy.deepcopy(_test_data)\n    \n            _args[\"thermal_in_profile\"] = os.path.join(\n                tempd,\n                _args[\"thermal_in_profile\"],\n            )\n    \n            pbm_prof.generate_all(tempd)\n    \n            del _args[\"efficiency\"]\n            del _args[\"average_generated\"]\n            del _args[\"average_profile\"]\n    \n            pbm_eff.calc_thermal_to_elec_eff(**_args)", "min_run_count": 2, "name": "bench_calc.EfficiencyCalcs.time_thermal2elec_calc", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "b912a62f51d8f6e8e8ac31a9e999cf12489a9fc2ee12c5f2fd6ee5889cff88cd", "warmup_time": -1}, "bench_models.ModelBuild.time_model_build": {"code": "class ModelBuild:\n    def time_model_build(self, model):\n        _model_path = os.path.join(MODELS_DIR, f\"{model.split('.')[0]}.mo\")\n        if \"Tokamak\" in model:\n            self.session.build_model(_model_path, model, extra_models=MODELS)\n        else:\n            self.session.build_model(_model_path, model)\n\n    def setup(self, model):\n        self.session = pydelica.Session()\n        self.session.use_libraries(MODELICA_ENVIRONMENT)", "min_run_count": 2, "name": "bench_models.ModelBuild.time_model_build", "number": 0, "param_names": ["model"], "params": [["'WasteHeat.WasteHeatPower'", "'CryogenicPlant.CryogenicPower'", "'PowerGenEquations.PowerGenCaseByCase'", "'CoolantDetrit.CoolantDetritCaseByCase'", "'BlanketDetrit.Power_CarrierBreeder'", "'HCDSystemPkg.HCDSystem'", "'Magnets.TF_Magnet'", "'Magnets.PF_Magnet'", "'Tokamak.Interdependencies'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "a96289408660aeb2550b72429a1cd5ec1a23bcc10d8399cde3c2516eded90ff1", "warmup_time": -1}, "bench_module.ImportPowerBalance.timeraw_import_powerbalance": {"code": "class ImportPowerBalance:\n    def timeraw_import_powerbalance(self):\n        return \"\"\"\n        import power_balance\n        \"\"\"", "min_run_count": 2, "name": "bench_module.ImportPowerBalance.timeraw_import_powerbalance", "number": 1, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "fe0c59ced547538384ef7baab5bd2fb1fd19585c02c5c225b9cbe921bc3f9a77", "warmup_time": -1}, "bench_profiles.ProfileGeneration.time_profile_generation": {"code": "class ProfileGeneration:\n    def time_profile_generation(self, profile):\n        getattr(pbm_prof, f\"gen_{profile}_profile\")()", "min_run_count": 2, "name": "bench_profiles.ProfileGeneration.time_profile_generation", "number": 0, "param_names": ["profile"], "params": [["'thermalpowerout'", "'nbiheat'", "'rfheat'", "'tfcoil_current'", "'cscoil_current'", "'pf1coil_current'", "'pf2coil_current'", "'pf3coil_current'", "'pf4coil_current'", "'pf5coil_current'", "'pf6coil_current'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "12139715bdbd9748468b99dd9ab456e35a0e157d8cfebffe0d399e51cd787459", "warmup_time": -1}, "bench_profiles.ProfileToDataframe.time_profile_to_dataframe": {"code": "class ProfileToDataframe:\n    def time_profile_to_dataframe(self):\n        pbm_prof.read_profile_to_df(self.example_prof)\n\n    def setup(self):\n        pbm_prof.generate_all(self.prof_dir.name)\n        self.example_prof = list(glob.glob(os.path.join(self.prof_dir.name, \"*.mat\")))[\n            0\n        ]", "min_run_count": 2, "name": "bench_profiles.ProfileToDataframe.time_profile_to_dataframe", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "760abf5819c6285c6b8b82772ba40755f62886ee78cf62483df07f49516cc34a", "warmup_time": -1}, "bench_utilities.DictionaryExpand.time_dictionary_flatten": {"code": "class DictionaryExpand:\n    def time_dictionary_flatten(self, n):\n        pbm_util.expand_dictionary(n)", "min_run_count": 2, "name": "bench_utilities.DictionaryExpand.time_dictionary_flatten", "number": 0, "param_names": ["flattened_dict"], "params": [["{'A': 'B', 'C.D': 'E', 'C.F.G': 'H', 'I.J': 'K', 'I.L': ['M', 'N']}"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "1d73e4f29db3ca6f9849561f1cfedb86024e90c358cc166eb6c280d1f44e85f9", "warmup_time": -1}, "bench_utilities.DictionaryFlatten.time_dictionary_flatten": {"code": "class DictionaryFlatten:\n    def time_dictionary_flatten(self, n):\n        pbm_util.flatten_dictionary(n)", "min_run_count": 2, "name": "bench_utilities.DictionaryFlatten.time_dictionary_flatten", "number": 0, "param_names": ["expanded_dict"], "params": [["{'A': 'B', 'C': {'D': 'E', 'F': {'G': 'H'}}, 'I': {'J': 'K', 'L': ['M', 'N']}}"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "d17c80e42fcbe36c6a08943b7eacbdab115eaaf86c3eb264d6251abcd8ec06e8", "warmup_time": -1}, "bench_utilities.ValueConversion.time_value_conversion": {"code": "class ValueConversion:\n    def time_value_conversion(self, n):\n        pbm_util.convert_to_value(n)", "min_run_count": 2, "name": "bench_utilities.ValueConversion.time_value_conversion", "number": 0, "param_names": ["value_str"], "params": [["'3.815'", "'4'", "'3i+5'", "'False'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ecc69de437083555838bb6543a39df1d77ba340acc9056cf35809a83ec78b23a", "warmup_time": -1}}, "machines": {"gh-machine-group-0": {"arch": "x86_64", "cpu": "Intel(R) Xeon(R)-2XXX @ 2.40GHz", "machine": "gh-machine-group-0", "num_cpu": "2", "os": "Linux 5.11.0", "ram": "7114k", "version": 1}}, "tags": {"v1.0.1": 68, "v1.1.0": 74}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}