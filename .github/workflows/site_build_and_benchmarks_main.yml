name: Benchmarks and Docs
on: [push]
jobs:
  run_benchmarks:
    container:
      image: openmodelica/openmodelica:v1.18.0-minimal
    runs-on: ubuntu-latest
    name: Run Benchmarks on main
    if: ${{ github.ref_name == 'main' }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Install OpenModelica libraries
      run: apt -y install omlib-modelica-3.2.3 omlib-modelicaservices-3.2.3 omlib-complex-3.2.3
    - name: Configure Git credentials
      uses: OleksiyRudenko/gha-git-credentials@v2
      with:
        email: action@github.com
        token: '${{ secrets.GITHUB_TOKEN }}'
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Setup ASV
      run: |
        python -m pip install asv virtualenv click
        python benchmarks/generate_asv_config.py --results-output-dir results
        asv machine --yes --config benchmarks/asv_config.json
    - name: Retrieve Previous Data
      run: |
        if [[ `git ls-remote --heads origin benchmarks` ]]
        then
          git checkout origin/benchmarks -b benchmarks
          git checkout ${GITHUB_REF_NAME}
          git checkout benchmarks -- benchmarks/results
          git branch -D benchmarks
        fi
        git checkout -b benchmarks
        mkdir -p benchmarks/results
    - name: Run ASV
      run: asv --config benchmarks/asv_config.json run --show-stderr --append-samples --verbose
    - name: Add Results
      run: |
        git add -f benchmarks/results/*
        git commit -m "Benchmarking ${RUNNER_NAME} Run on commit ${GITHUB_SHA}, $(date)" || echo "No changes to commit"
    - name: Push Results
      uses: ad-m/github-push-action@v0.6.0
      with:
        branch: benchmarks
        force: true
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Create Webpage
      run: asv publish --config benchmarks/asv_config.json --html-dir site
    - name: Add Website
      run: |
        if [[ `git ls-remote --heads origin gh-pages` ]]
        then
          git checkout origin/gh-pages -b gh-pages
        else
          git checkout -b gh-pages
        fi
        mv benchmarks/site site
        rm -rf benchmarks
        mv site benchmarks
        git add -f benchmarks/*
        git commit -m "Updated ASV site, $(date)" || echo "No changes to commit"
    - name: Push Website
      uses: ad-m/github-push-action@v0.6.0
      with:
        branch: gh-pages
        force: true
        github_token: ${{ secrets.GITHUB_TOKEN }}
  mkapi_docs:
    runs-on: ubuntu-latest
    name: Create API Reference
    if: ${{ github.ref_name == 'main' }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
    - uses: Gr1N/setup-poetry@v7
    - name: Install Module
      run: poetry install
    - name: Run MktheAPIDocs
      run: |
        poetry run python -m pip install mktheapidocs
        poetry run mktheapidocs power_balance docs/Reference https://github.com/ukaea/powerbalance/tree/$GITHUB_REF_NAME
    - name: Archive API Docs
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: mktheapidocs
        path: docs/Reference
        retention-days: 1
  build_pages:
    runs-on: ubuntu-latest
    name: Build Documentation Site
    if: ${{ github.ref_name == 'main' }}
    needs: [run_benchmarks, mkapi_docs]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch Latest
        run: |
          if [[ `git ls-remote --heads origin gh-pages` ]]
          then
            git checkout origin/gh-pages -b gh-pages
            git pull origin gh-pages
            git checkout ${GITHUB_REF_NAME}
          fi          
      - name: Set up Python
        uses: actions/setup-python@v2
      - uses: Gr1N/setup-poetry@v7
      - name: Install virtual environment
        run: poetry install
      - name: Configure Git credentials
        uses: OleksiyRudenko/gha-git-credentials@v2
        with:
          email: action@github.com
          token: '${{ secrets.GITHUB_TOKEN }}'
      - name: Retrieve API Reference
        uses: actions/download-artifact@v2
        with:
          name: mktheapidocs
          path: reference
      - name: Append Reference API
        run: |
          mkdir -p docs/Reference
          rsync -r reference/ docs/Reference
          rm -rf reference
          poetry run python docs/append_reference.py
      - name: Deploy Docs
        run: |
          poetry run mkdocs build
          git reset --hard
          git clean -d -f docs/Reference
          git checkout gh-pages
          rsync -r site/* .
          rm -rf site
          git config advice.addIgnoredFile false
          git add -f *
          git commit -m "Updated Documentation site, $(date)" || echo "No changes to commit"
      - name: Push Website
        uses: ad-m/github-push-action@v0.6.0
        with:
          branch: gh-pages
          force: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
